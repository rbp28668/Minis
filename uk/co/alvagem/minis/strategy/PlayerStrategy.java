/*
 * PlayerStrategy.java
 * Created on 17-Oct-2005
 * By Bruce.Porteous
 *
 */
package uk.co.alvagem.minis.strategy;

import uk.co.alvagem.minis.Game;
import uk.co.alvagem.minis.Player;

/**
 * PlayerStrategy is a simple strategy that can be used to guide
 * a players movement. Examples may include:
 * StayOutOfTouch
 * SupportInAttack
 * KeepDefensiveLine
 * ChaseLooseBall
 * Tackle
 * AvoidTackle
 * AttackForwards (for ball carrier only).
 * InterceptBallCarrier
 * AvoidCollision
 * Restart
 * @author Bruce.Porteous
 *
 */
public interface PlayerStrategy {

	/**
	 * Assesses the weight that should be applied to this strategy
	 * at any point in time.  1 is certain, 0 is not at all.  Some 
	 * strategies may be only for attack and defence so the weighting
	 * will vary dramatically depending whether the player's team
	 * has the ball or not.
	 * @param player is the player this strategy is being applied to.
	 * @return a weight between 0 and 1 inclusive that determines how
	 * relevent this strategy is to that player at this point in the
	 * game.
	 */
	public float assessWeight(Game game, Player player);
	
	/**
	 * Gets the weight generated by assessWeight.
	 * @return
	 */
	public float getWeight();
	
	/** 
	 * Applies the strategy to the player to update the player's 
	 * movements.
	 * @param player is the player to have this strategy applied to.
	 */
	public void apply(Game game, Player player);
	
	/**
	 * Returns the name of this strategy so that we can see
	 * what's happening.
	 * @return the strategy name.
	 */
	public String getName();
}
